{
	"info": {
		"_postman_id": "d537338d-80a3-4052-895e-31abc071403c",
		"name": "Личные события",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26899356"
	},
	"item": [
		{
			"name": "Создание двух одинаковых событий",
			"item": [
				{
					"name": "Отображение расписания",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"2023-05-08T00:00:00+03:00\",\r\n    \"till\": \"2023-05-15T00:00:00+03:00\",\r\n    \"onlyTypes\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}events",
							"host": [
								"{{baseUrl}}events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание Личного события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"задний цвет\", JSON.parse(pm.request.body).backgroundColor);\r",
									"pm.collectionVariables.set(\"цвет\", JSON.parse(pm.request.body).color);\r",
									"pm.collectionVariables.set(\"описание\", JSON.parse(pm.request.body).description);\r",
									"pm.collectionVariables.set(\"название\", JSON.parse(pm.request.body).title);\r",
									"pm.collectionVariables.set(\"начало\", JSON.parse(pm.request.body).startAt);\r",
									"pm.collectionVariables.set(\"конец\", JSON.parse(pm.request.body).endAt);\r",
									"pm.collectionVariables.set(\"id2\", pm.response.json().data.payload.id);\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"color\": \"#43B658\",\r\n    \"description\": \"opisanie\",\r\n    \"title\": \"событие1\",\r\n    \"startAt\": \"2023-06-01T11:11:00+03:00\",\r\n    \"endAt\": \"2023-06-01T12:11:00+03:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}createPersonal",
							"host": [
								"{{baseUrl}}createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание ДУБЛИКАТА события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.collectionVariables.set(\"id\", pm.response.json().data.payload.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"{{задний цвет}}\",\r\n    \"color\": \"{{цвет}}\",\r\n    \"description\": \"{{описание}}\",\r\n    \"title\": \"{{название}}\",\r\n    \"startAt\": \"{{начало}}\",\r\n    \"endAt\": \"{{конец}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}createPersonal",
							"host": [
								"{{baseUrl}}createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Наличие ПЕРВОГО созданного события в расписании\", function () {\r",
									"    pm.expect(pm.response.json().data.events.some(event => event.payload.id === pm.variables.get(\"id2\"))).to.equal(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Наличие ДУБЛИКАТА события в расписании\", function () {\r",
									"    pm.expect(pm.response.json().data.events.some(event => event.payload.id === pm.variables.get(\"id\"))).to.equal(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let событие = pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id\"));\r",
									"let дубликат = pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\"));\r",
									"\r",
									"pm.test(\"Совпадение НАЗВАНИЙ подтверждено\", () => {\r",
									"    pm.expect(событие.payload.payload.title).to.eql(дубликат.payload.payload.title);\r",
									"});\r",
									"pm.test(\"Совпадение ОПИСАНИЙ подтверждено\", () => {\r",
									"    pm.expect(событие.payload.payload.description).to.eql(дубликат.payload.payload.description);\r",
									"});\r",
									"pm.test(\"Совпадение ЦВЕТОВ подтверждено\", () => {\r",
									"    pm.expect(событие.payload.payload.color).to.eql(дубликат.payload.payload.color);\r",
									"});\r",
									"pm.test(\"Совпадение ФОНОВЫХ ЦВЕТОВ подтверждено\", () => {\r",
									"    pm.expect(событие.payload.payload.backgroundColor).to.eql(дубликат.payload.payload.backgroundColor);\r",
									"});\r",
									"pm.test(\"Совпадение ВРЕМЕНИ НАЧАЛА подтверждено\", () => {\r",
									"    pm.expect(событие.startAt).to.eql(дубликат.startAt);\r",
									"});\r",
									"pm.test(\"Совпадение ВРЕМЕНИ ОКОНЧАНИЯ подтверждено\", () => {\r",
									"    pm.expect(событие.payload.payload.endAt).to.eql(дубликат.payload.payload.endAt);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{начало}}\",\r\n    \"till\": \"{{конец}}\",\r\n    \"onlyTypes\": [\r\n        \"slot\",\r\n        \"event\"\r\n    ],\r\n    \"statuses\": [\r\n        \"without_status\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}events",
							"host": [
								"{{baseUrl}}events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление первого события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Удаление без ошибок\", function () {\r",
									"    pm.expect(pm.response.json().data).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{id2}},\r\n    \"startAt\": \"{{начало}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}removePersonal",
							"host": [
								"{{baseUrl}}removePersonal"
							]
						}
					},
					"response": []
				}
			],
			"description": "Название события:\n\n22 - содержит цифры (и кириллицу)\n\nДень:\n\nдата из текущего месяца\n\nВремя начала события:\n\n60 - все цифры одинаковые\n\nВремя окончания события:\n\n90 - длительность события = 1 час\n\nОписание:\n\n104 - содержит латиницу\n\nЦвет события:\n\nзелёный\n\n(10 - Несколько абсолютно одинаковых событий)"
		},
		{
			"name": "Редактирование события: изменение Названия на 256 символов",
			"item": [
				{
					"name": "Редактирование Личного события",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var год = new Date().getFullYear();\r",
									"var месяц = ('0' + (new Date().getMonth() + 1)).slice(-2);\r",
									"var день = ('0' + new Date().getDate()).slice(-2);\r",
									"var сегодня = год + '-' + месяц + '-' + день;\r",
									"\r",
									"var часы = (\"0\" + new Date().getHours()).slice(-2);\r",
									"var минуты = (\"0\" + new Date().getMinutes()).slice(-2);\r",
									"\r",
									"pm.collectionVariables.set(\"сейчас\", сегодня + 'T' + часы + \":\" + минуты + ':00+03:00')\r",
									"\r",
									"\r",
									"var месяцРедактирование = 0;\r",
									"var деньРедактирование = 1;\r",
									"var часРедактирование = 1;\r",
									"var минутаРедактирование = 5;\r",
									"\r",
									"var исходнаяДата = new Date(pm.collectionVariables.get(\"сейчас\"));\r",
									"\r",
									"исходнаяДата.setMonth(исходнаяДата.getMonth() + месяцРедактирование);\r",
									"\r",
									"исходнаяДата.setDate(исходнаяДата.getDate() + деньРедактирование);\r",
									"\r",
									"исходнаяДата.setHours(исходнаяДата.getHours() + часРедактирование);\r",
									"\r",
									"исходнаяДата.setMinutes(исходнаяДата.getMinutes() + минутаРедактирование);\r",
									"\r",
									"var год = исходнаяДата.getFullYear();\r",
									"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
									"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
									"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
									"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
									"\r",
									"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+03:00`;\r",
									"\r",
									"pm.collectionVariables.set(\"время\", времяИзменено);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Уведомление об ошибке: Длина названия!\", function() {\r",
									"    pm.expect(pm.response.json().errors[0].error.message).to.eql(\"Value must not exceed 40 character(s)\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"startAt\": \"{{время}}\",\r\n    \"endAt\": \"{{сегодня}}T00:01:00+03:00\",\r\n    \"title\": \"ZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGmmmmmmmmmmmmmmmmmmmmmmmmmmmКонеЦ\",\r\n    \"description\": \"æø\",\r\n    \"color\": \"#43B658\",\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"id\": {{id}},\r\n    \"oldStartAt\": \"{{начало}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}updatePersonal",
							"host": [
								"{{baseUrl}}updatePersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var исходнаяДата = new Date(pm.collectionVariables.get(\"начало\"));\r",
									"исходнаяДата.setHours(исходнаяДата.getHours() -3);\r",
									"var год = исходнаяДата.getFullYear();\r",
									"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
									"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
									"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
									"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
									"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+00:00`;\r",
									"pm.collectionVariables.set(\"время\", времяИзменено);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ID события НЕ изменился\", function () {\r",
									"    pm.expect(pm.response.json().data.events.some(event => event.payload.id === pm.variables.get(\"id\"))).to.equal(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Название НЕ изменилось\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id\")).payload.payload.title).to.eql(pm.variables.get(\"название\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Описание НЕ изменилось\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id\")).payload.payload.description).to.eql(pm.variables.get(\"описание\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Описание НЕ изменилось\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id\")).payload.payload.description).to.eql(pm.variables.get(\"описание\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Цвет НЕ изменился\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id\")).payload.payload.color).to.eql(pm.variables.get(\"цвет\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Цвет фона НЕ изменился\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id\")).payload.payload.backgroundColor).to.eql(pm.variables.get(\"задний цвет\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Время начала события НЕ изменилось\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id\")).startAt).to.eql(pm.variables.get(\"время\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Длительность события НЕ изменилась\", function() {\r",
									"    pm.expect(pm.response.json().data.events.find(e => e.payload.id === pm.variables.get(\"id\")).durationSeconds).to.eql(3600);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{начало}}\",\r\n    \"till\": \"{{конец}}\",\r\n    \"onlyTypes\": [\r\n        \"slot\",\r\n        \"event\"\r\n    ],\r\n    \"statuses\": [\r\n        \"without_status\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}events",
							"host": [
								"{{baseUrl}}events"
							]
						}
					},
					"response": []
				}
			],
			"description": "(Невалидная проверка)\n\nИЗМЕНЕНИЕ значений следующим образом.\n\nНазвание события:\n\n179 - 256 символов: ZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGZXCBFGGmmmmmmmmmmmmmmmmmmmmmmmmmmmКонеЦ\n\nДень:\n\n187 - Изменить Дату на большую (позже) из будущего\n\nВремя начала события:\n\n210 - Ненаступившее сегодня время\n\nВремя окончания события:\n\n235 - Наступившее сегодня время\n\nОписание:\n\n276 - Другие языки (Скандинавская группа языков):  \næø\n\nЦвет события:\n\nзелёный"
		},
		{
			"name": "Редактирование: изменение Даты и Времени начала на текущие",
			"item": [
				{
					"name": "Редактирование Личного события",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var год = new Date().getFullYear();\r",
									"var месяц = ('0' + (new Date().getMonth() + 1)).slice(-2);\r",
									"var день = ('0' + new Date().getDate()).slice(-2);\r",
									"var сегодня = год + '-' + месяц + '-' + день;\r",
									"\r",
									"pm.collectionVariables.set(\"сегодня\", сегодня)\r",
									"\r",
									"var часы = (\"0\" + new Date().getHours()).slice(-2);\r",
									"var минуты = (\"0\" + new Date().getMinutes()).slice(-2);\r",
									"\r",
									"pm.collectionVariables.set(\"сейчас\", сегодня + 'T' + часы + \":\" + минуты + ':00+03:00')\r",
									"\r",
									"\r",
									"var месяцРедактирование = 0;\r",
									"var деньРедактирование = 0;\r",
									"var часРедактирование = 0;\r",
									"var минутаРедактирование = 0;\r",
									"\r",
									"var исходнаяДата = new Date(pm.collectionVariables.get(\"сейчас\"));\r",
									"\r",
									"исходнаяДата.setMonth(исходнаяДата.getMonth() + месяцРедактирование);\r",
									"\r",
									"исходнаяДата.setDate(исходнаяДата.getDate() + деньРедактирование);\r",
									"\r",
									"исходнаяДата.setHours(исходнаяДата.getHours() + часРедактирование);\r",
									"\r",
									"исходнаяДата.setMinutes(исходнаяДата.getMinutes() + минутаРедактирование);\r",
									"\r",
									"var год = исходнаяДата.getFullYear();\r",
									"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
									"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
									"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
									"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
									"\r",
									"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+03:00`;\r",
									"\r",
									"pm.collectionVariables.set(\"время\", времяИзменено);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"задний цвет\", JSON.parse(pm.request.body).backgroundColor);\r",
									"pm.collectionVariables.set(\"цвет\", JSON.parse(pm.request.body).color);\r",
									"pm.collectionVariables.set(\"описание\", JSON.parse(pm.request.body).description);\r",
									"pm.collectionVariables.set(\"название\", JSON.parse(pm.request.body).title);\r",
									"pm.collectionVariables.set(\"начало\", JSON.parse(pm.request.body).startAt);\r",
									"pm.collectionVariables.set(\"конец\", JSON.parse(pm.request.body).endAt);\r",
									"pm.collectionVariables.set(\"id2\", pm.response.json().data.payload.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"startAt\": \"{{сейчас}}\",\r\n    \"endAt\": \"{{сегодня}}T23:59:00+03:00\",\r\n    \"title\": \"а\",\r\n    \"description\": \"word\",\r\n    \"color\": \"#D478F1\",\r\n    \"backgroundColor\": \"#F9EBFF\",\r\n    \"id\": {{id}},\r\n    \"oldStartAt\": \"{{начало}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}updatePersonal",
							"host": [
								"{{baseUrl}}updatePersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var исходнаяДата = new Date(pm.collectionVariables.get(\"начало\"));\r",
									"исходнаяДата.setHours(исходнаяДата.getHours() -3);\r",
									"var год = исходнаяДата.getFullYear();\r",
									"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
									"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
									"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
									"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
									"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+00:00`;\r",
									"pm.collectionVariables.set(\"время\", времяИзменено);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Прежний ID события отсутствует\", function () {\r",
									"    pm.expect(pm.response.json().data.events.some(event => event.payload.id === pm.variables.get(\"id\"))).to.equal(false);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Наличие в расписании события с новым ID\", function () {\r",
									"    pm.expect(pm.response.json().data.events.some(event => event.payload.id === pm.variables.get(\"id2\"))).to.equal(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Название изменилось\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).payload.payload.title).to.eql(pm.variables.get(\"название\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Описание изменилось\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).payload.payload.description).to.eql(pm.variables.get(\"описание\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Цвет изменился\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).payload.payload.color).to.eql(pm.variables.get(\"цвет\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Цвет фона изменился\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).payload.payload.backgroundColor).to.eql(pm.variables.get(\"задний цвет\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Время начала события изменилось\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).startAt).to.eql(pm.variables.get(\"время\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Длительность события изменилась\", function() {\r",
									"    pm.expect(pm.response.json().data.events.find(e => e.payload.id === pm.variables.get(\"id2\")).durationSeconds).to.not.eql(3600);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{начало}}\",\r\n    \"till\": \"{{конец}}\",\r\n    \"onlyTypes\": [\r\n        \"slot\",\r\n        \"event\"\r\n    ],\r\n    \"statuses\": [\r\n        \"without_status\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}events",
							"host": [
								"{{baseUrl}}events"
							]
						}
					},
					"response": []
				}
			],
			"description": "ИЗМЕНЕНИЕ значений следующим образом.\n\nНазвание события:\n\n175 - 1 символ:  \nа\n\nДень:\n\n195 - сегодняшняя дата\n\nВремя начала события:\n\n211 - текущее время\n\nВремя окончания события:\n\n244 - конец суток (23:59)\n\nОписание:\n\n274 - Латиница:  \nword\n\nЦвет события:\n\n299 - Выбрать другой цвет:  \nфиолетовый"
		},
		{
			"name": "Редактирование: изменение времени окончания на невалидное значение",
			"item": [
				{
					"name": "Редактирование Личного события",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var месяцРедактирование = 0;\r",
									"var деньРедактирование = 0;\r",
									"var часРедактирование = 0;\r",
									"var минутаРедактирование = 0;\r",
									"\r",
									"var исходнаяДата = new Date(pm.collectionVariables.get(\"сейчас\"));\r",
									"\r",
									"исходнаяДата.setMonth(исходнаяДата.getMonth() + месяцРедактирование);\r",
									"\r",
									"исходнаяДата.setDate(исходнаяДата.getDate() + деньРедактирование);\r",
									"\r",
									"исходнаяДата.setHours(исходнаяДата.getHours() + часРедактирование);\r",
									"\r",
									"исходнаяДата.setMinutes(исходнаяДата.getMinutes() + минутаРедактирование);\r",
									"\r",
									"var год = исходнаяДата.getFullYear();\r",
									"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
									"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
									"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
									"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
									"\r",
									"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+03:00`;\r",
									"\r",
									"pm.collectionVariables.set(\"время\", времяИзменено);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Уведомление об ошибке: Корректность времени!\", function() {\r",
									"    pm.expect(pm.response.json().errors[0].error.message).to.eql(\"Fail to check against [correctDateTimeInAtomFormat] validation filter\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"startAt\": \"{{сейчас}}\",\r\n    \"endAt\": \"{{сегодня}}T24:60:00+03:00\",\r\n    \"title\": \"0\",\r\n    \"description\": \"https://www.google.com/\",\r\n    \"color\": \"{{цвет}}\",\r\n    \"backgroundColor\": \"{{задний цвет}}\",\r\n    \"id\": {{id2}},\r\n    \"oldStartAt\": \"{{начало}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}updatePersonal",
							"host": [
								"{{baseUrl}}updatePersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var исходнаяДата = new Date(pm.collectionVariables.get(\"начало\"));\r",
									"исходнаяДата.setHours(исходнаяДата.getHours() -3);\r",
									"var год = исходнаяДата.getFullYear();\r",
									"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
									"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
									"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
									"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
									"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+00:00`;\r",
									"pm.collectionVariables.set(\"время\", времяИзменено);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ID события НЕ изменился\", function () {\r",
									"    pm.expect(pm.response.json().data.events.some(event => event.payload.id === pm.variables.get(\"id2\"))).to.equal(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Название НЕ изменилось\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).payload.payload.title).to.eql(pm.variables.get(\"название\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Описание НЕ изменилось\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).payload.payload.description).to.eql(pm.variables.get(\"описание\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Цвет НЕ изменился\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).payload.payload.color).to.eql(pm.variables.get(\"цвет\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Цвет фона НЕ изменился\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).payload.payload.backgroundColor).to.eql(pm.variables.get(\"задний цвет\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Время начала события НЕ изменилось\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).startAt).to.eql(pm.variables.get(\"время\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{сегодня}}T00:00:00+03:00\",\r\n    \"till\": \"{{сегодня}}T23:59:00+03:00\",\r\n    \"onlyTypes\": [\r\n        \"slot\",\r\n        \"event\"\r\n    ],\r\n    \"statuses\": [\r\n        \"without_status\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}events",
							"host": [
								"{{baseUrl}}events"
							]
						}
					},
					"response": []
				}
			],
			"description": "(Невалидная проверка)\n\nИЗМЕНЕНИЕ полей следующим образом.\n\nНазвание события:\n\n174 - Ноль:\n\n0\n\nДень:\n\n186 - Оставить неизменным\n\nВремя начала события:\n\n215 - Все цифры одинаковые:  \n11:11\n\nВремя окончания события:\n\n246 - Часы > 23:  \n24\n\n247 - Минуты > 59:  \n60\n\nОписание:\n\n282 - Ссылка:\n\n[https://www.google.com/](https://www.google.com/)\n\nЦвет события:\n\n300 - Оставить неизменным"
		},
		{
			"name": "Удаление несуществующего события",
			"item": [
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Удаление без ошибок\", function () {\r",
									"    pm.expect(pm.response.json().data).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{id2}},\r\n    \"startAt\": \"{{начало}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}removePersonal",
							"host": [
								"{{baseUrl}}removePersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var исходнаяДата = new Date(pm.collectionVariables.get(\"начало\"));\r",
									"исходнаяДата.setHours(исходнаяДата.getHours() -3);\r",
									"var год = исходнаяДата.getFullYear();\r",
									"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
									"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
									"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
									"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
									"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+00:00`;\r",
									"pm.collectionVariables.set(\"время\", времяИзменено);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Событие отсутствует в расписании\", function () {\r",
									"    pm.expect(pm.response.json().data.events.some(event => event.payload.id === pm.variables.get(\"id2\"))).to.equal(false);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{сегодня}}T00:00:00+03:00\",\r\n    \"till\": \"{{сегодня}}T23:59:00+03:00\",\r\n    \"onlyTypes\": [\r\n        \"slot\",\r\n        \"event\"\r\n    ],\r\n    \"statuses\": [\r\n        \"without_status\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}events",
							"host": [
								"{{baseUrl}}events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Попытка повторного удаления события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Удаление без ошибок\", function () {\r",
									"    pm.expect(pm.response.json().errors[0].error.message).to.eql(\"Personal event not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{id2}},\r\n    \"startAt\": \"{{начало}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}removePersonal",
							"host": [
								"{{baseUrl}}removePersonal"
							]
						}
					},
					"response": []
				}
			],
			"description": "(Невалидная проверка)\n\nУдаление события, созданного в 3-ем шаге 1-го тест-кейса \"Создания двух одинаковых событий\"."
		},
		{
			"name": "Создание события длительностью в сутки",
			"item": [
				{
					"name": "Создание Личного события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"задний цвет\", JSON.parse(pm.request.body).backgroundColor);\r",
									"pm.collectionVariables.set(\"цвет\", JSON.parse(pm.request.body).color);\r",
									"pm.collectionVariables.set(\"описание\", JSON.parse(pm.request.body).description);\r",
									"pm.collectionVariables.set(\"название\", JSON.parse(pm.request.body).title);\r",
									"pm.collectionVariables.set(\"начало\", JSON.parse(pm.request.body).startAt);\r",
									"pm.collectionVariables.set(\"конец\", JSON.parse(pm.request.body).endAt);\r",
									"pm.collectionVariables.set(\"id2\", pm.response.json().data.payload.id);\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"#F4F5F6\",\r\n    \"color\": \"#FAC641\",\r\n    \"description\": \"イベント\",\r\n    \"title\": \"событие\",\r\n    \"startAt\": \"2023-05-11T00:00:00+03:00\",\r\n    \"endAt\": \"2023-05-11T23:59:00+03:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}createPersonal",
							"host": [
								"{{baseUrl}}createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Наличие созданного события в расписании\", function () {\r",
									"    pm.expect(pm.response.json().data.events.some(event => event.payload.id === pm.variables.get(\"id2\"))).to.equal(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Название события соответствует создаваемому\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).payload.payload.title).to.eql(pm.variables.get(\"название\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Описание события соответствует создаваемому\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).payload.payload.description).to.eql(pm.variables.get(\"описание\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Описание события соответствует создаваемому\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).payload.payload.description).to.eql(pm.variables.get(\"описание\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Цвет события соответствует создаваемому\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).payload.payload.color).to.eql(pm.variables.get(\"цвет\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Цвет фона события соответствует создаваемому\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).payload.payload.backgroundColor).to.eql(pm.variables.get(\"задний цвет\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Время начала события соответствует создаваемому\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).startAt).to.eql(pm.variables.get(\"время\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Длительность события соответствует создаваемому: 23 ч 59 мин\", function() {\r",
									"    pm.expect(pm.response.json().data.events.find(e => e.payload.id === pm.variables.get(\"id2\")).durationSeconds).to.eql(86340);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var исходнаяДата = new Date(pm.collectionVariables.get(\"начало\"));\r",
									"исходнаяДата.setHours(исходнаяДата.getHours() -3);\r",
									"var год = исходнаяДата.getFullYear();\r",
									"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
									"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
									"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
									"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
									"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+00:00`;\r",
									"pm.collectionVariables.set(\"время\", времяИзменено);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{начало}}\",\r\n    \"till\": \"{{конец}}\",\r\n    \"onlyTypes\": [\r\n        \"slot\",\r\n        \"event\"\r\n    ],\r\n    \"statuses\": [\r\n        \"without_status\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}events",
							"host": [
								"{{baseUrl}}events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события длительностью в сутки",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Удаление без ошибок\", function () {\r",
									"    pm.expect(pm.response.json().data).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{id2}},\r\n    \"startAt\": \"{{начало}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}removePersonal",
							"host": [
								"{{baseUrl}}removePersonal"
							]
						}
					},
					"response": []
				}
			],
			"description": "Название события:\n\n17 - содержит только кириллицу\n\nДень:\n\n45 - дата из прошлого\n\nВремя начала события:\n\n58 - начало суток (00:00)\n\nВремя окончания события:\n\n79 - конец суток (23:59)  \n(98 - Длительность события = сутки)\n\nОписание:\n\n105 - содержит иероглифы\n\nЦвет события:\n\nжёлтый\n\nЦвет фона:\n\nсерый"
		},
		{
			"name": "Создание события с \"отрицательной\" длительностью",
			"item": [
				{
					"name": "Создание Личного события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Должна быть ошибка!\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('\"Date start must be earlier than end date\"');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"название\", JSON.parse(pm.request.body).title);\r",
									"pm.collectionVariables.set(\"конец\", JSON.parse(pm.request.body).startAt);\r",
									"pm.collectionVariables.set(\"начало\", JSON.parse(pm.request.body).endAt);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"color\": \"#43B658\",\r\n    \"description\": \"слово и ещё слово\",\r\n    \"title\": \"lichnoe sobitie\",\r\n    \"startAt\": \"2024-01-29T23:59:00+03:00\",\r\n    \"endAt\": \"2024-01-29T00:00:00+03:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}createPersonal",
							"host": [
								"{{baseUrl}}createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Отсутствие в расписании события\", function () {\r",
									"    pm.expect(pm.response.json().data.events.some(event => event.payload && event.payload.payload && event.payload.payload.title === pm.variables.get(\"название\"))).to.equal(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{начало}}\",\r\n    \"till\": \"{{конец}}\",\r\n    \"onlyTypes\": [\r\n        \"slot\",\r\n        \"event\"\r\n    ],\r\n    \"statuses\": [\r\n        \"without_status\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}events",
							"host": [
								"{{baseUrl}}events"
							]
						}
					},
					"response": []
				}
			],
			"description": "(Невалидная проверка)\n\nНазвание события:\n\n18 - содержит только латиницу\n\nДень:\n\n46 - дата из будущего\n\nВремя начала события:\n\n59 - конец суток (23:59)\n\nВремя окончания события:\n\n78 - начало суток (00:00)  \n(101 - Начало события позже окончания + Проверка граничных значений)\n\nОписание:\n\n107 - содержит пробелы\n\nЦвет события:\n\nзелёный"
		},
		{
			"name": "Создание события с нулевой длительностью",
			"item": [
				{
					"name": "Создание Личного события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Должна быть ошибка!\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('\"Date start must be earlier than end date\"');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"название\", JSON.parse(pm.request.body).title);\r",
									"pm.collectionVariables.set(\"начало\", JSON.parse(pm.request.body).startAt);\r",
									"pm.collectionVariables.set(\"конец\", JSON.parse(pm.request.body).endAt)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"color\": \"#43B658\",\r\n    \"description\": \"æø\",\r\n    \"title\": \"слово и слово\",\r\n    \"startAt\": \"2023-05-01T23:59:00+03:00\",\r\n    \"endAt\": \"2023-05-01T23:59:00+03:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}createPersonal",
							"host": [
								"{{baseUrl}}createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Отсутствие в расписании события\", function () {\r",
									"    pm.expect(pm.response.json().data.events.some(event => event.payload && event.payload.payload && event.payload.payload.title === pm.variables.get(\"название\"))).to.equal(false);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{начало}}\",\r\n    \"till\": \"{{конец}}\",\r\n    \"onlyTypes\": [\r\n        \"slot\",\r\n        \"event\"\r\n    ],\r\n    \"statuses\": [\r\n        \"without_status\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}events",
							"host": [
								"{{baseUrl}}events"
							]
						}
					},
					"response": []
				}
			],
			"description": "(Невалидная проверка)\n\nНазвание события:\n\n21 - содержит пробелы\n\nДень:\n\n45 - дата из прошлого\n\nВремя начала события:\n\n59 - конец суток (23:59)\n\nВремя окончания события:\n\n102 - длительность события равна нулю\n\nОписание:\n\n106 - символы прочих языков (Скандинавская группа языков)\n\nЦвет события:\n\nзелёный"
		},
		{
			"name": "Создание события с текущими временем и датой в начале события",
			"item": [
				{
					"name": "Создание Личного события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"задний цвет\", JSON.parse(pm.request.body).backgroundColor);\r",
									"pm.collectionVariables.set(\"цвет\", JSON.parse(pm.request.body).color);\r",
									"pm.collectionVariables.set(\"описание\", JSON.parse(pm.request.body).description);\r",
									"pm.collectionVariables.set(\"название\", JSON.parse(pm.request.body).title);\r",
									"pm.collectionVariables.set(\"начало\", JSON.parse(pm.request.body).startAt);\r",
									"pm.collectionVariables.set(\"конец\", JSON.parse(pm.request.body).endAt);\r",
									"pm.collectionVariables.set(\"id2\", pm.response.json().data.payload.id);\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var год = new Date().getFullYear();\r",
									"var месяц = ('0' + (new Date().getMonth() + 1)).slice(-2);\r",
									"var день = ('0' + new Date().getDate()).slice(-2);\r",
									"var сегодня = год + '-' + месяц + '-' + день;\r",
									"\r",
									"pm.collectionVariables.set(\"сегодня\", сегодня)\r",
									"\r",
									"var часы = (\"0\" + new Date().getHours()).slice(-2);\r",
									"var минуты = (\"0\" + new Date().getMinutes()).slice(-2);\r",
									"\r",
									"pm.collectionVariables.set(\"сейчас\", сегодня + 'T' + часы + \":\" + минуты + ':00+03:00')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"color\": \"#D478F1\",\r\n    \"description\": \"\",\r\n    \"title\": \"СоБыТиЕ\",\r\n    \"startAt\": \"{{сейчас}}\",\r\n    \"endAt\": \"{{сегодня}}T23:59:00+03:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}createPersonal",
							"host": [
								"{{baseUrl}}createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var исходнаяДата = new Date(pm.collectionVariables.get(\"сейчас\"));\r",
									"исходнаяДата.setHours(исходнаяДата.getHours() -3);\r",
									"var год = исходнаяДата.getFullYear();\r",
									"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
									"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
									"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
									"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
									"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+00:00`;\r",
									"pm.collectionVariables.set(\"время\", времяИзменено);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Наличие созданного события в расписании\", function () {\r",
									"    pm.expect(pm.response.json().data.events.some(event => event.payload.id === pm.variables.get(\"id2\"))).to.equal(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Время начала события изменилось\", () => {\r",
									"    pm.expect(pm.response.json().data.events.find(цикл => цикл.payload.id === pm.variables.get(\"id2\")).startAt).to.eql(pm.variables.get(\"время\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{начало}}\",\r\n    \"till\": \"{{конец}}\",\r\n    \"onlyTypes\": [\r\n        \"slot\",\r\n        \"event\"\r\n    ],\r\n    \"statuses\": [\r\n        \"without_status\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}events",
							"host": [
								"{{baseUrl}}events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Удаление без ошибок\", function () {\r",
									"    pm.expect(pm.response.json().data).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{id2}},\r\n    \"startAt\": \"{{начало}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}removePersonal",
							"host": [
								"{{baseUrl}}removePersonal"
							]
						}
					},
					"response": []
				}
			],
			"description": "Граничные и смежные с ними значения.\n\nНазвание события:\n\n28 - буквы разного регистра СоБыТиЕ\n\nДень:\n\n47 - сегодняшняя дата\n\nВремя начала события:\n\n56 - текущее время\n\nВремя окончания события:\n\n79 - конец суток (23:59)\n\nОписание:\n\n125 - (пусто)\n\nЦвет события:\n\nфиолетовый\n\nЦвет фона:\n\nзелёный"
		},
		{
			"name": "Создание событий с необходимыми по User Story длительностями",
			"item": [
				{
					"name": "Длительность события = 25 минут",
					"item": [
						{
							"name": "Создание Личного события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"задний цвет\", JSON.parse(pm.request.body).backgroundColor);\r",
											"pm.collectionVariables.set(\"цвет\", JSON.parse(pm.request.body).color);\r",
											"pm.collectionVariables.set(\"описание\", JSON.parse(pm.request.body).description);\r",
											"pm.collectionVariables.set(\"название\", JSON.parse(pm.request.body).title);\r",
											"pm.collectionVariables.set(\"начало\", JSON.parse(pm.request.body).startAt);\r",
											"pm.collectionVariables.set(\"конец\", JSON.parse(pm.request.body).endAt);\r",
											"pm.collectionVariables.set(\"id2\", pm.response.json().data.payload.id);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var год = new Date().getFullYear();\r",
											"var месяц = ('0' + (new Date().getMonth() + 1)).slice(-2);\r",
											"var день = ('0' + new Date().getDate()).slice(-2);\r",
											"var сегодня = год + '-' + месяц + '-' + день;\r",
											"\r",
											"var часы = (\"0\" + new Date().getHours()).slice(-2);\r",
											"var минуты = (\"0\" + new Date().getMinutes()).slice(-2);\r",
											"\r",
											"pm.collectionVariables.set(\"сейчас\", сегодня + 'T' + часы + \":\" + минуты + ':00+03:00')\r",
											"\r",
											"\r",
											"var месяцРедактирование = 0;\r",
											"var деньРедактирование = 0;\r",
											"var часРедактирование = 0;\r",
											"var минутаРедактирование = 25;\r",
											"\r",
											"var исходнаяДата = new Date(pm.collectionVariables.get(\"сейчас\"));\r",
											"\r",
											"исходнаяДата.setMonth(исходнаяДата.getMonth() + месяцРедактирование);\r",
											"\r",
											"исходнаяДата.setDate(исходнаяДата.getDate() + деньРедактирование);\r",
											"\r",
											"исходнаяДата.setHours(исходнаяДата.getHours() + часРедактирование);\r",
											"\r",
											"исходнаяДата.setMinutes(исходнаяДата.getMinutes() + минутаРедактирование);\r",
											"\r",
											"var год = исходнаяДата.getFullYear();\r",
											"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
											"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
											"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
											"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
											"\r",
											"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+03:00`;\r",
											"\r",
											"pm.collectionVariables.set(\"время\", времяИзменено);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"color\": \"#81888D\",\r\n    \"description\": \"кириллица\",\r\n    \"title\": \"イベント\",\r\n    \"startAt\": \"{{сейчас}}\",\r\n    \"endAt\": \"{{время}}\"    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}createPersonal",
									"host": [
										"{{baseUrl}}createPersonal"
									]
								}
							},
							"response": []
						},
						{
							"name": "Проверка",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Наличие созданного события в расписании\", function () {\r",
											"    pm.expect(pm.response.json().data.events.some(event => event.payload.id === pm.variables.get(\"id2\"))).to.equal(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"var исходнаяДата = new Date(pm.collectionVariables.get(\"сейчас\"));\r",
											"исходнаяДата.setHours(исходнаяДата.getHours() -3);\r",
											"var год = исходнаяДата.getFullYear();\r",
											"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
											"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
											"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
											"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
											"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+00:00`;\r",
											"pm.collectionVariables.set(\"время\", времяИзменено);\r",
											"\r",
											"pm.test(\"Подтверждение времени начала события\", function() {\r",
											"    pm.expect(pm.response.json().data.events.find(e => e.payload.id === pm.variables.get(\"id2\")).startAt).to.eql(pm.collectionVariables.get(\"время\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Длительность события 1500 сек = 25 мин\", function() {\r",
											"    pm.expect(pm.response.json().data.events.find(e => e.payload.id === pm.variables.get(\"id2\")).durationSeconds).to.eql(1500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from\": \"{{начало}}\",\r\n    \"till\": \"{{конец}}\",\r\n    \"onlyTypes\": [\r\n        \"slot\",\r\n        \"event\"\r\n    ],\r\n    \"statuses\": [\r\n        \"without_status\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}events",
									"host": [
										"{{baseUrl}}events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Удаление без ошибок\", function () {\r",
											"    pm.expect(pm.response.json().data).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{id2}},\r\n    \"startAt\": \"{{сейчас}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}removePersonal",
									"host": [
										"{{baseUrl}}removePersonal"
									]
								}
							},
							"response": []
						}
					],
					"description": "Название события:\n\n19 - Иероглифы:  \nイベント\n\nОписание:\n\n103 - Только кириллица\n\nДень:\n\n47 - Сегодняшняя дата\n\nДлительность события:\n\n92 - 25 минут\n\nЦвет события:\n\nсерый\n\nЦвет фона:\n\nзелёный"
				},
				{
					"name": "Длительность события = 24 минуты",
					"item": [
						{
							"name": "Создание Личного события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"задний цвет\", JSON.parse(pm.request.body).backgroundColor);\r",
											"pm.collectionVariables.set(\"цвет\", JSON.parse(pm.request.body).color);\r",
											"pm.collectionVariables.set(\"описание\", JSON.parse(pm.request.body).description);\r",
											"pm.collectionVariables.set(\"название\", JSON.parse(pm.request.body).title);\r",
											"pm.collectionVariables.set(\"начало\", JSON.parse(pm.request.body).startAt);\r",
											"pm.collectionVariables.set(\"конец\", JSON.parse(pm.request.body).endAt);\r",
											"pm.collectionVariables.set(\"id2\", pm.response.json().data.payload.id);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var год = new Date().getFullYear();\r",
											"var месяц = ('0' + (new Date().getMonth() + 1)).slice(-2);\r",
											"var день = ('0' + new Date().getDate()).slice(-2);\r",
											"var сегодня = год + '-' + месяц + '-' + день;\r",
											"\r",
											"var часы = (\"0\" + new Date().getHours()).slice(-2);\r",
											"var минуты = (\"0\" + new Date().getMinutes()).slice(-2);\r",
											"\r",
											"pm.collectionVariables.set(\"сейчас\", сегодня + 'T' + часы + \":\" + минуты + ':00+03:00')\r",
											"\r",
											"\r",
											"var месяцРедактирование = 0;\r",
											"var деньРедактирование = 0;\r",
											"var часРедактирование = 0;\r",
											"var минутаРедактирование = 24;\r",
											"\r",
											"var исходнаяДата = new Date(pm.collectionVariables.get(\"сейчас\"));\r",
											"\r",
											"исходнаяДата.setMonth(исходнаяДата.getMonth() + месяцРедактирование);\r",
											"\r",
											"исходнаяДата.setDate(исходнаяДата.getDate() + деньРедактирование);\r",
											"\r",
											"исходнаяДата.setHours(исходнаяДата.getHours() + часРедактирование);\r",
											"\r",
											"исходнаяДата.setMinutes(исходнаяДата.getMinutes() + минутаРедактирование);\r",
											"\r",
											"var год = исходнаяДата.getFullYear();\r",
											"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
											"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
											"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
											"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
											"\r",
											"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+03:00`;\r",
											"\r",
											"pm.collectionVariables.set(\"время\", времяИзменено);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"color\": \"#43B658\",\r\n    \"description\": \"описание1\",\r\n    \"title\": \"æø\",\r\n    \"startAt\": \"{{сейчас}}\",\r\n    \"endAt\": \"{{время}}\"    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}createPersonal",
									"host": [
										"{{baseUrl}}createPersonal"
									]
								}
							},
							"response": []
						},
						{
							"name": "Проверка",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Наличие созданного события в расписании\", function () {\r",
											"    pm.expect(pm.response.json().data.events.some(event => event.payload.id === pm.variables.get(\"id2\"))).to.equal(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"var исходнаяДата = new Date(pm.collectionVariables.get(\"сейчас\"));\r",
											"исходнаяДата.setHours(исходнаяДата.getHours() -3);\r",
											"var год = исходнаяДата.getFullYear();\r",
											"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
											"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
											"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
											"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
											"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+00:00`;\r",
											"pm.collectionVariables.set(\"время\", времяИзменено);\r",
											"\r",
											"pm.test(\"Подтверждение времени начала события\", function() {\r",
											"    pm.expect(pm.response.json().data.events.find(e => e.payload.id === pm.variables.get(\"id2\")).startAt).to.eql(pm.collectionVariables.get(\"время\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Длительность события 1440 сек = 24 мин\", function() {\r",
											"    pm.expect(pm.response.json().data.events.find(e => e.payload.id === pm.variables.get(\"id2\")).durationSeconds).to.eql(1440);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from\": \"{{начало}}\",\r\n    \"till\": \"{{конец}}\",\r\n    \"onlyTypes\": [\r\n        \"slot\",\r\n        \"event\"\r\n    ],\r\n    \"statuses\": [\r\n        \"without_status\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}events",
									"host": [
										"{{baseUrl}}events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Удаление без ошибок\", function () {\r",
											"    pm.expect(pm.response.json().data).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{id2}},\r\n    \"startAt\": \"{{сейчас}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}removePersonal",
									"host": [
										"{{baseUrl}}removePersonal"
									]
								}
							},
							"response": []
						}
					],
					"description": "Название события:\n\n20 - Другие языки (Скадинавская группа языков)  \næø\n\nДлительность события:\n\n93 - 24 минуты\n\nОписание:\n\n108 - Цифры и кириллица:  \nописание1"
				},
				{
					"name": "Длительность события = 26 минут",
					"item": [
						{
							"name": "Создание Личного события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"задний цвет\", JSON.parse(pm.request.body).backgroundColor);\r",
											"pm.collectionVariables.set(\"цвет\", JSON.parse(pm.request.body).color);\r",
											"pm.collectionVariables.set(\"описание\", JSON.parse(pm.request.body).description);\r",
											"pm.collectionVariables.set(\"название\", JSON.parse(pm.request.body).title);\r",
											"pm.collectionVariables.set(\"начало\", JSON.parse(pm.request.body).startAt);\r",
											"pm.collectionVariables.set(\"конец\", JSON.parse(pm.request.body).endAt);\r",
											"pm.collectionVariables.set(\"id2\", pm.response.json().data.payload.id);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var год = new Date().getFullYear();\r",
											"var месяц = ('0' + (new Date().getMonth() + 1)).slice(-2);\r",
											"var день = ('0' + new Date().getDate()).slice(-2);\r",
											"var сегодня = год + '-' + месяц + '-' + день;\r",
											"\r",
											"var часы = (\"0\" + new Date().getHours()).slice(-2);\r",
											"var минуты = (\"0\" + new Date().getMinutes()).slice(-2);\r",
											"\r",
											"pm.collectionVariables.set(\"сейчас\", сегодня + 'T' + часы + \":\" + минуты + ':00+03:00')\r",
											"\r",
											"\r",
											"var месяцРедактирование = 0;\r",
											"var деньРедактирование = 0;\r",
											"var часРедактирование = 0;\r",
											"var минутаРедактирование = 26;\r",
											"\r",
											"var исходнаяДата = new Date(pm.collectionVariables.get(\"сейчас\"));\r",
											"\r",
											"исходнаяДата.setMonth(исходнаяДата.getMonth() + месяцРедактирование);\r",
											"\r",
											"исходнаяДата.setDate(исходнаяДата.getDate() + деньРедактирование);\r",
											"\r",
											"исходнаяДата.setHours(исходнаяДата.getHours() + часРедактирование);\r",
											"\r",
											"исходнаяДата.setMinutes(исходнаяДата.getMinutes() + минутаРедактирование);\r",
											"\r",
											"var год = исходнаяДата.getFullYear();\r",
											"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
											"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
											"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
											"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
											"\r",
											"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+03:00`;\r",
											"\r",
											"pm.collectionVariables.set(\"время\", времяИзменено);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"color\": \"#43B658\",\r\n    \"description\": \"1234567890\",\r\n    \"title\": \"1234567890\",\r\n    \"startAt\": \"{{сейчас}}\",\r\n    \"endAt\": \"{{время}}\"    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}createPersonal",
									"host": [
										"{{baseUrl}}createPersonal"
									]
								}
							},
							"response": []
						},
						{
							"name": "Проверка",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Наличие созданного события в расписании\", function () {\r",
											"    pm.expect(pm.response.json().data.events.some(event => event.payload.id === pm.variables.get(\"id2\"))).to.equal(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"var исходнаяДата = new Date(pm.collectionVariables.get(\"сейчас\"));\r",
											"исходнаяДата.setHours(исходнаяДата.getHours() -3);\r",
											"var год = исходнаяДата.getFullYear();\r",
											"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
											"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
											"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
											"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
											"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+00:00`;\r",
											"pm.collectionVariables.set(\"время\", времяИзменено);\r",
											"\r",
											"pm.test(\"Подтверждение времени начала события\", function() {\r",
											"    pm.expect(pm.response.json().data.events.find(e => e.payload.id === pm.variables.get(\"id2\")).startAt).to.eql(pm.collectionVariables.get(\"время\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Длительность события 1560 сек = 26 мин\", function() {\r",
											"    pm.expect(pm.response.json().data.events.find(e => e.payload.id === pm.variables.get(\"id2\")).durationSeconds).to.eql(1560);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from\": \"{{начало}}\",\r\n    \"till\": \"{{конец}}\",\r\n    \"onlyTypes\": [\r\n        \"slot\",\r\n        \"event\"\r\n    ],\r\n    \"statuses\": [\r\n        \"without_status\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}events",
									"host": [
										"{{baseUrl}}events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Удаление без ошибок\", function () {\r",
											"    pm.expect(pm.response.json().data).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{id2}},\r\n    \"startAt\": \"{{сейчас}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}removePersonal",
									"host": [
										"{{baseUrl}}removePersonal"
									]
								}
							},
							"response": []
						}
					],
					"description": "Название события:\n\n23 - Только цифры:  \n1234567890\n\nДлительность события:\n\n94 - 26 минут\n\nОписание:\n\n109 - Только цифры:  \n1234567890"
				},
				{
					"name": "Длительность события = 9 часов 39 минут",
					"item": [
						{
							"name": "Создание Личного события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"задний цвет\", JSON.parse(pm.request.body).backgroundColor);\r",
											"pm.collectionVariables.set(\"цвет\", JSON.parse(pm.request.body).color);\r",
											"pm.collectionVariables.set(\"описание\", JSON.parse(pm.request.body).description);\r",
											"pm.collectionVariables.set(\"название\", JSON.parse(pm.request.body).title);\r",
											"pm.collectionVariables.set(\"начало\", JSON.parse(pm.request.body).startAt);\r",
											"pm.collectionVariables.set(\"конец\", JSON.parse(pm.request.body).endAt);\r",
											"pm.collectionVariables.set(\"id2\", pm.response.json().data.payload.id);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var год = new Date().getFullYear();\r",
											"var месяц = ('0' + (new Date().getMonth() + 1)).slice(-2);\r",
											"var день = ('0' + new Date().getDate()).slice(-2);\r",
											"var сегодня = год + '-' + месяц + '-' + день;\r",
											"\r",
											"var часы = (\"0\" + new Date().getHours()).slice(-2);\r",
											"var минуты = (\"0\" + new Date().getMinutes()).slice(-2);\r",
											"\r",
											"pm.collectionVariables.set(\"сейчас\", сегодня + 'T' + часы + \":\" + минуты + ':00+03:00')\r",
											"\r",
											"\r",
											"var месяцРедактирование = 0;\r",
											"var деньРедактирование = 0;\r",
											"var часРедактирование = 9;\r",
											"var минутаРедактирование = 39;\r",
											"\r",
											"var исходнаяДата = new Date(pm.collectionVariables.get(\"сейчас\"));\r",
											"\r",
											"исходнаяДата.setMonth(исходнаяДата.getMonth() + месяцРедактирование);\r",
											"\r",
											"исходнаяДата.setDate(исходнаяДата.getDate() + деньРедактирование);\r",
											"\r",
											"исходнаяДата.setHours(исходнаяДата.getHours() + часРедактирование);\r",
											"\r",
											"исходнаяДата.setMinutes(исходнаяДата.getMinutes() + минутаРедактирование);\r",
											"\r",
											"var год = исходнаяДата.getFullYear();\r",
											"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
											"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
											"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
											"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
											"\r",
											"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+03:00`;\r",
											"\r",
											"pm.collectionVariables.set(\"время\", времяИзменено);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\": \"#FFF7C7\",\r\n    \"color\": \"#D478F1\",\r\n    \"description\": \"“@&*\",\r\n    \"title\": \"“@&*\",\r\n    \"startAt\": \"{{сейчас}}\",\r\n    \"endAt\": \"{{время}}\"    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}createPersonal",
									"host": [
										"{{baseUrl}}createPersonal"
									]
								}
							},
							"response": []
						},
						{
							"name": "Проверка",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Наличие созданного события в расписании\", function () {\r",
											"    pm.expect(pm.response.json().data.events.some(event => event.payload.id === pm.variables.get(\"id2\"))).to.equal(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"var исходнаяДата = new Date(pm.collectionVariables.get(\"сейчас\"));\r",
											"исходнаяДата.setHours(исходнаяДата.getHours() -3);\r",
											"var год = исходнаяДата.getFullYear();\r",
											"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
											"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
											"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
											"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
											"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+00:00`;\r",
											"pm.collectionVariables.set(\"время\", времяИзменено);\r",
											"\r",
											"pm.test(\"Подтверждение времени начала события\", function() {\r",
											"    pm.expect(pm.response.json().data.events.find(e => e.payload.id === pm.variables.get(\"id2\")).startAt).to.eql(pm.collectionVariables.get(\"время\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Длительность события 34740 сек = 9 ч 39 мин\", function() {\r",
											"    pm.expect(pm.response.json().data.events.find(e => e.payload.id === pm.variables.get(\"id2\")).durationSeconds).to.eql(34740);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from\": \"{{начало}}\",\r\n    \"till\": \"{{конец}}\",\r\n    \"onlyTypes\": [\r\n        \"slot\",\r\n        \"event\"\r\n    ],\r\n    \"statuses\": [\r\n        \"without_status\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}events",
									"host": [
										"{{baseUrl}}events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Удаление без ошибок\", function () {\r",
											"    pm.expect(pm.response.json().data).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{id2}},\r\n    \"startAt\": \"{{сейчас}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}removePersonal",
									"host": [
										"{{baseUrl}}removePersonal"
									]
								}
							},
							"response": []
						}
					],
					"description": "Название события:\n\n25 - Спец. символы:  \n“@&\\*\n\nДлительность события:\n\n96 - 9 часов 39 минут\n\nОписание:\n\n111 - Спец. символы:  \n“@&\\*"
				},
				{
					"name": "Длительность события = 9 часов 40 минут",
					"item": [
						{
							"name": "Создание Личного события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"задний цвет\", JSON.parse(pm.request.body).backgroundColor);\r",
											"pm.collectionVariables.set(\"цвет\", JSON.parse(pm.request.body).color);\r",
											"pm.collectionVariables.set(\"описание\", JSON.parse(pm.request.body).description);\r",
											"pm.collectionVariables.set(\"название\", JSON.parse(pm.request.body).title);\r",
											"pm.collectionVariables.set(\"начало\", JSON.parse(pm.request.body).startAt);\r",
											"pm.collectionVariables.set(\"конец\", JSON.parse(pm.request.body).endAt);\r",
											"pm.collectionVariables.set(\"id2\", pm.response.json().data.payload.id);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var год = new Date().getFullYear();\r",
											"var месяц = ('0' + (new Date().getMonth() + 1)).slice(-2);\r",
											"var день = ('0' + new Date().getDate()).slice(-2);\r",
											"var сегодня = год + '-' + месяц + '-' + день;\r",
											"\r",
											"var часы = (\"0\" + new Date().getHours()).slice(-2);\r",
											"var минуты = (\"0\" + new Date().getMinutes()).slice(-2);\r",
											"\r",
											"pm.collectionVariables.set(\"сейчас\", сегодня + 'T' + часы + \":\" + минуты + ':00+03:00')\r",
											"\r",
											"\r",
											"var месяцРедактирование = 0;\r",
											"var деньРедактирование = 0;\r",
											"var часРедактирование = 9;\r",
											"var минутаРедактирование = 40;\r",
											"\r",
											"var исходнаяДата = new Date(pm.collectionVariables.get(\"сейчас\"));\r",
											"\r",
											"исходнаяДата.setMonth(исходнаяДата.getMonth() + месяцРедактирование);\r",
											"\r",
											"исходнаяДата.setDate(исходнаяДата.getDate() + деньРедактирование);\r",
											"\r",
											"исходнаяДата.setHours(исходнаяДата.getHours() + часРедактирование);\r",
											"\r",
											"исходнаяДата.setMinutes(исходнаяДата.getMinutes() + минутаРедактирование);\r",
											"\r",
											"var год = исходнаяДата.getFullYear();\r",
											"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
											"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
											"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
											"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
											"\r",
											"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+03:00`;\r",
											"\r",
											"pm.collectionVariables.set(\"время\", времяИзменено);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"color\": \"#43B658\",\r\n    \"description\": \"СоБыТиЕ\",\r\n    \"title\": \"0\",\r\n    \"startAt\": \"{{сейчас}}\",\r\n    \"endAt\": \"{{время}}\"    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}createPersonal",
									"host": [
										"{{baseUrl}}createPersonal"
									]
								}
							},
							"response": []
						},
						{
							"name": "Проверка",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Наличие созданного события в расписании\", function () {\r",
											"    pm.expect(pm.response.json().data.events.some(event => event.payload.id === pm.variables.get(\"id2\"))).to.equal(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"var исходнаяДата = new Date(pm.collectionVariables.get(\"сейчас\"));\r",
											"исходнаяДата.setHours(исходнаяДата.getHours() -3);\r",
											"var год = исходнаяДата.getFullYear();\r",
											"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
											"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
											"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
											"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
											"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+00:00`;\r",
											"pm.collectionVariables.set(\"время\", времяИзменено);\r",
											"\r",
											"pm.test(\"Подтверждение времени начала события\", function() {\r",
											"    pm.expect(pm.response.json().data.events.find(e => e.payload.id === pm.variables.get(\"id2\")).startAt).to.eql(pm.collectionVariables.get(\"время\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Длительность события 34800 сек = 9 ч 40 мин\", function() {\r",
											"    pm.expect(pm.response.json().data.events.find(e => e.payload.id === pm.variables.get(\"id2\")).durationSeconds).to.eql(34800);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from\": \"{{начало}}\",\r\n    \"till\": \"{{конец}}\",\r\n    \"onlyTypes\": [\r\n        \"slot\",\r\n        \"event\"\r\n    ],\r\n    \"statuses\": [\r\n        \"without_status\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}events",
									"host": [
										"{{baseUrl}}events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Удаление без ошибок\", function () {\r",
											"    pm.expect(pm.response.json().data).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{id2}},\r\n    \"startAt\": \"{{сейчас}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}removePersonal",
									"host": [
										"{{baseUrl}}removePersonal"
									]
								}
							},
							"response": []
						}
					],
					"description": "Название события:\n\n31 - Ноль:  \n0\n\nДлительность события:\n\n95 - 9 часов 40 минут\n\nОписание:\n\n114 - Буквы разного регистра:  \nСоБыТиЕ"
				},
				{
					"name": "Длительность события = 9 часов 41 минута",
					"item": [
						{
							"name": "Создание Личного события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"задний цвет\", JSON.parse(pm.request.body).backgroundColor);\r",
											"pm.collectionVariables.set(\"цвет\", JSON.parse(pm.request.body).color);\r",
											"pm.collectionVariables.set(\"описание\", JSON.parse(pm.request.body).description);\r",
											"pm.collectionVariables.set(\"название\", JSON.parse(pm.request.body).title);\r",
											"pm.collectionVariables.set(\"начало\", JSON.parse(pm.request.body).startAt);\r",
											"pm.collectionVariables.set(\"конец\", JSON.parse(pm.request.body).endAt);\r",
											"pm.collectionVariables.set(\"id2\", pm.response.json().data.payload.id);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var год = new Date().getFullYear();\r",
											"var месяц = ('0' + (new Date().getMonth() + 1)).slice(-2);\r",
											"var день = ('0' + new Date().getDate()).slice(-2);\r",
											"var сегодня = год + '-' + месяц + '-' + день;\r",
											"\r",
											"var часы = (\"0\" + new Date().getHours()).slice(-2);\r",
											"var минуты = (\"0\" + new Date().getMinutes()).slice(-2);\r",
											"\r",
											"pm.collectionVariables.set(\"сейчас\", сегодня + 'T' + часы + \":\" + минуты + ':00+03:00')\r",
											"\r",
											"\r",
											"var месяцРедактирование = 0;\r",
											"var деньРедактирование = 0;\r",
											"var часРедактирование = 9;\r",
											"var минутаРедактирование = 41;\r",
											"\r",
											"var исходнаяДата = new Date(pm.collectionVariables.get(\"сейчас\"));\r",
											"\r",
											"исходнаяДата.setMonth(исходнаяДата.getMonth() + месяцРедактирование);\r",
											"\r",
											"исходнаяДата.setDate(исходнаяДата.getDate() + деньРедактирование);\r",
											"\r",
											"исходнаяДата.setHours(исходнаяДата.getHours() + часРедактирование);\r",
											"\r",
											"исходнаяДата.setMinutes(исходнаяДата.getMinutes() + минутаРедактирование);\r",
											"\r",
											"var год = исходнаяДата.getFullYear();\r",
											"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
											"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
											"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
											"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
											"\r",
											"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+03:00`;\r",
											"\r",
											"pm.collectionVariables.set(\"время\", времяИзменено);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"color\": \"#43B658\",\r\n    \"description\": \"0\",\r\n    \"title\": \"проверка поля на количество символов абв\",\r\n    \"startAt\": \"{{сейчас}}\",\r\n    \"endAt\": \"{{время}}\"    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}createPersonal",
									"host": [
										"{{baseUrl}}createPersonal"
									]
								}
							},
							"response": []
						},
						{
							"name": "Проверка",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Наличие созданного события в расписании\", function () {\r",
											"    pm.expect(pm.response.json().data.events.some(event => event.payload.id === pm.variables.get(\"id2\"))).to.equal(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"var исходнаяДата = new Date(pm.collectionVariables.get(\"сейчас\"));\r",
											"исходнаяДата.setHours(исходнаяДата.getHours() -3);\r",
											"var год = исходнаяДата.getFullYear();\r",
											"var месяц = (исходнаяДата.getMonth() + 1).toString().padStart(2, \"0\");\r",
											"var день = исходнаяДата.getDate().toString().padStart(2, \"0\");\r",
											"var час = исходнаяДата.getHours().toString().padStart(2, \"0\");\r",
											"var минута = исходнаяДата.getMinutes().toString().padStart(2, \"0\");\r",
											"var времяИзменено = `${год}-${месяц}-${день}T${час}:${минута}:00+00:00`;\r",
											"pm.collectionVariables.set(\"время\", времяИзменено);\r",
											"\r",
											"pm.test(\"Подтверждение времени начала события\", function() {\r",
											"    pm.expect(pm.response.json().data.events.find(e => e.payload.id === pm.variables.get(\"id2\")).startAt).to.eql(pm.collectionVariables.get(\"время\"));\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Длительность события 34800 сек = 9 ч 41 мин\", function() {\r",
											"    pm.expect(pm.response.json().data.events.find(e => e.payload.id === pm.variables.get(\"id2\")).durationSeconds).to.eql(34860);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from\": \"{{начало}}\",\r\n    \"till\": \"{{конец}}\",\r\n    \"onlyTypes\": [\r\n        \"slot\",\r\n        \"event\"\r\n    ],\r\n    \"statuses\": [\r\n        \"without_status\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}events",
									"host": [
										"{{baseUrl}}events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Удаление без ошибок\", function () {\r",
											"    pm.expect(pm.response.json().data).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{id2}},\r\n    \"startAt\": \"{{сейчас}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}removePersonal",
									"host": [
										"{{baseUrl}}removePersonal"
									]
								}
							},
							"response": []
						}
					],
					"description": "Название события:\n\n34 - 40 символов:  \nпроверка поля на количество символов абв\n\nДлительность события:\n\n97 - 9 часов 41 минута\n\nОписание:\n\n117 - 0"
				}
			],
			"description": "Граничные и смежные с ними значения.  \nПодробное описание приложено в Документации каждой из папок с тест-кейсами, вложенных в эту папку."
		},
		{
			"name": "Создание события длительностью 1 месяц 1 день 1 час 1 минута",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"color\": \"#81888D\",\r\n    \"description\": \"ОпИсАнИе\",\r\n    \"title\": \"ПОРВЕРКА\",\r\n    \"startAt\": \"2023-06-06T14:30:00+03:00\",\r\n    \"endAt\": \"2023-07-07T15:31:00+03:00\"    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}createPersonal",
					"host": [
						"{{baseUrl}}createPersonal"
					]
				},
				"description": "Запрос сохранён для записи скрин-каста на демострацию бага."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api-teachers.skyeng.ru/v2/schedule/",
			"type": "string"
		},
		{
			"key": "token",
			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c2VySWQiOjE0NTk2OTMzLCJpZGVudGl0eSI6InRlc3QudHN0MzE3QHNreWVuZy5ydSIsImlkZW50aXR5TG9naW4iOm51bGwsImlkZW50aXR5RW1haWwiOiJ0ZXN0LnRzdDMxN0Bza3llbmcucnUiLCJpZGVudGl0eVBob25lIjpudWxsLCJuYW1lIjoidGVzdCIsInN1cm5hbWUiOiJ0ZXN0IiwiZW1haWwiOiJ0ZXN0LnRzdDMxN0Bza3llbmcucnUiLCJ1aUxhbmd1YWdlIjoicnUiLCJsb2NhbGUiOiJydSIsInNlcnZpY2VMb2NhbGUiOm51bGwsInVhcyI6MzAsImp3dFR5cGUiOjEsImp0aSI6IjZSUWM4cDZ3SWZkekxsTmdjdG12STM2SnlFbGN6cmZVIiwiYnJhbmQiOm51bGwsImV4cCI6MTY4Mzk3NDU5MSwiYXZhdGFyVXJsIjoiaHR0cHM6XC9cL2F1dGgtYXZhdGFycy1za3llbmcuaW1naXgubmV0XC8xNDU5NjkzM1wvOThmNmJlYjUtZjA3Yi00MWViLThiYzItNDU3MTQwYTc0ODgzP2F1dG89Zm9ybWF0JTJDZW5oYW5jZSZmaXQ9Y3JvcCZoPTIwMCZpeGxpYj1waHAtMi4xLjEmcT03NSZzYXQ9OCZzaGFycD0xMCZ2aWI9OCZ3PTIwMCIsImFJc1N0cm9uZyI6dHJ1ZSwiYVR5cGUiOiJVU0VSTkFNRV9QQVNTV09SRCIsImFUaW1lIjoxNjgzODg4MTkwLCJyb2xlcyI6WyJST0xFX1RFQUNIRVJfQ0FORElEQVRFIiwiUk9MRV9URUFDSEVSX0NBTkRJREFURV9CQVNFX0FDQ0VTUyIsIlJPTEVfVFRDX1VTQUdFIiwiUk9MRV9WSU1CT1hfVEVBQ0hFUl9VU0FHRSIsIlJPTEVfVEVBQ0hFUiIsIlJPTEVfQ1JNMl9URUFDSEVSX0FDQ0VTUyIsIlJPTEVfTUFUSF9URUFDSEVSIiwiUk9MRV9NQVRIX0NPTlRFTlRfVEhFTUVfVklFVyJdfQ.M6wr4Fm_xxp5Wn4EKim_-67UNurb4uWX2vwAZCBGZBPSc7g_W1QAMT7gTf4fchGhIqe4GBvyedBG1yXzo7QdoVJbN0Xkt6u1G0LuXC3CVpyWxOguAVTSd__PhitC8qKW_8neV5LFrURpwjHHuHkAWIBXPwJOJaYndnM97aMLO2Vg_iPX8OzIBnPd0ToONCJgtHBFpDE3c9yfwTXlQ3et-zeL1lYZAS2vSJRF0iun0qgwdRwuAq1_lDu7DGvUOaxmsJV53HHQGTigujZnS-gcnxg429z_IMMvGkrr4p4xCy0q0EOW4b56sbMAkF4VxRneHAHRIE1m1_vz3INpPrlt74D2dpEkIRirMO7ehZF49Oyh521lSHRtSN2LJw83Mbd2UBZ6Z-FfEztzPCje9iYP986rHUEUCmZ3IgYa53uVg0h-eh6elHL2U1MODg_QH0uvS_hkFYjh6x0YnkJWH7DO-JAmcLZlUrXV3zptM-rDDYQl_wFfI1DEQaBG_vv5drOj05ohjJsAKQ-BJkX-81xSXtN8-Ke5-cm1-oZmmZo3kXjMC6ASy74oAahUZwdyq1DQcUazPPwm-vb1otAAVaiuNvXYT7Fnc6Lyf-FLFbQx9BazokG4OjVUtjCw79waLojvvxlvjaH5HDNAx3qdr40jqTOjQiBsCl6p1XxbpjIiwxk",
			"type": "string"
		},
		{
			"key": "задний цвет",
			"value": ""
		},
		{
			"key": "цвет",
			"value": ""
		},
		{
			"key": "описание",
			"value": ""
		},
		{
			"key": "название",
			"value": ""
		},
		{
			"key": "начало",
			"value": ""
		},
		{
			"key": "конец",
			"value": ""
		},
		{
			"key": "id",
			"value": ""
		},
		{
			"key": "id2",
			"value": ""
		},
		{
			"key": "сегодня",
			"value": ""
		},
		{
			"key": "время",
			"value": ""
		},
		{
			"key": "сейчас",
			"value": "",
			"type": "string"
		}
	]
}